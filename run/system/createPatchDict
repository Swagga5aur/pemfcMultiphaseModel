/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  4.0                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      createPatchDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// This application/dictionary controls:
// - optional: create new patches from boundary faces (either given as
//   a set of patches or as a faceSet)
// - always: order faces on coupled patches such that they are opposite. This
//   is done for all coupled faces, not just for any patches created.
// - optional: synchronise points on coupled patches.

// 1. Create cyclic:
// - specify where the faces should come from
// - specify the type of cyclic. If a rotational specify the rotationAxis
//   and centre to make matching easier
// - pointSync true to guarantee points to line up.

// 2. Correct incorrect cyclic:
// This will usually fail upon loading:
//  "face 0 area does not match neighbour 2 by 0.0100005%"
//  " -- possible face ordering problem."
// - change patch type from 'cyclic' to 'patch' in the polyMesh/boundary file.
// - loosen match tolerance to get case to load
// - regenerate cyclic as above


// Tolerance used in matching faces. Absolute tolerance is span of
// face times this factor. To load incorrectly matches meshes set this
// to a higher value.
matchTolerance 1E-5;

// Do a synchronisation of coupled points after creation of any patches.
pointSync true;

// Patches to create.
patches
(
    {
        name abpLeft;
        patchInfo
        {
            type patch;
        }
        constructFrom set;
        set abpLeftFaces;
    }
    {
        name abpSides;
        patchInfo
        {
            type patch;
        }
        constructFrom set;
        set abpSidesFaces;
    }
    {
        name anodeFluidInlet;
        patchInfo
        {
            type patch;
        }
        constructFrom set;
        set anodeFluidInletFaces;
    }
    {
        name anodeFluidOutlet;
        patchInfo
        {
            type patch;
        }
        constructFrom set;
        set anodeFluidOutletFaces;
    }
    {
        name anodeFluidSides;
        patchInfo
        {
            type patch;
        }
        constructFrom set;
        set anodeFluidSidesFaces;
    }
    {
        name agdlSides;
        patchInfo
        {
            type patch;
        }
        constructFrom set;
        set agdlSidesFaces;
    }
    {
        name aclSides;
        patchInfo
        {
            type patch;
        }
        constructFrom set;
        set aclSidesFaces;
    }
    {
        name electrolyteSides;
        patchInfo
        {
            type patch;
        }
        constructFrom set;
        set electrolyteSidesFaces;
    }
    {
        name cclSides;
        patchInfo
        {
            type patch;
        }
        constructFrom set;
        set cclSidesFaces;
    }
    {
        name cgdlSides;

        // Type of new patch
        patchInfo
        {
            type patch;
        }
        constructFrom set;
        set cgdlSidesFaces;
    }    
    {
        name cathodeFluidInlet;

        // Dictionary to construct new patch from
        patchInfo
        {
            type patch;
        }

        // How to construct: either from 'patches' or 'set'
        constructFrom set;

        // If constructFrom = set : name of faceSet
        set cathodeFluidInletFaces;
    }
    {
        name cathodeFluidOutlet;
        patchInfo
        {
            type patch;
        }
        constructFrom set;
        set cathodeFluidOutletFaces;
    }
    {
        name cathodeFluidSides;
        patchInfo
        {
            type patch;
        }
        constructFrom set;
        set cathodeFluidSidesFaces;
    }
    {
        name cbpSides;
        patchInfo
        {
            type patch;
        }
        constructFrom set;
        set cbpSidesFaces;
    }
    {
        name cbpRight;
        patchInfo
        {
            type patch;
        }
        constructFrom set;
        set cbpRightFaces;
    }
);

// ************************************************************************* //
